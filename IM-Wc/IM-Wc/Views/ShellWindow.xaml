<mah:MetroWindow
    x:Class="IM_Wc.Views.ShellWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:IM_Wc.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="ShellWindow"
    Width="910" BorderBrush="#33333333"
    Height="640" CornerPreference="DoNotRound"
    GlowColor="#33333333"
    ShowTitleBar="False"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="52" />
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Background="{StaticResource NaviBarBackground}">
            <DockPanel>
                <Image
                    Width="36"
                    Height="36"
                    Margin="0,36,0,0"
                    DockPanel.Dock="Top"
                    Source="/Assets/banli.jpg" />
                <UniformGrid
                    Margin="0,6"
                    Columns="1"
                    DockPanel.Dock="Bottom">
                    <Button
                        Height="42"
                        Content="{iconPacks:RemixIcon Kind=MiniProgramLine}"
                        Style="{StaticResource MahApps.Styles.Button.ToolBar}" />
                    <Button
                        Height="42"
                        Content="{iconPacks:PhosphorIcons Kind=DeviceMobileSpeakerLight}"
                        Style="{StaticResource MahApps.Styles.Button.ToolBar}" />
                    <mah:Badged>
                        <Button Content="{iconPacks:PhosphorIcons Kind=ListLight}" Style="{StaticResource MahApps.Styles.Button.ToolBar}" />
                    </mah:Badged>

                </UniformGrid>
                <ListBox
                    Margin="0,18,0,0"
                    Background="Transparent"
                    DockPanel.Dock="Top"
                    ItemsSource="{Binding NaviBarItems}">
                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MahApps.Styles.ListBoxItem}" TargetType="ListBoxItem">
                            <Setter Property="Foreground" Value="{StaticResource NaviBarItemStroke}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Height" Value="41" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush" Value="{StaticResource NaviBarItemSelectedFill}" />
                            <Setter Property="mah:ItemHelper.ActiveSelectionBackgroundBrush" Value="{StaticResource NaviBarItemSelectedFill}" />
                            <Setter Property="mah:ItemHelper.SelectedBackgroundBrush" Value="{StaticResource NaviBarItemSelectedFill}" />
                            <Setter Property="mah:ItemHelper.MouseLeftButtonPressedForegroundBrush" Value="{StaticResource NaviBarItemSelectedStroke}" />
                            <Setter Property="mah:ItemHelper.SelectedForegroundBrush" Value="{StaticResource NaviBarItemSelectedStroke}" />
                            <Setter Property="mah:ItemHelper.ActiveSelectionForegroundBrush" Value="{StaticResource NaviBarItemSelectedStroke}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid
                                            x:Name="RootGrid"
                                            Background="Transparent"
                                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <mah:ClipBorder
                                                x:Name="Background"
                                                Background="Transparent"
                                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                            <mah:ClipBorder
                                                x:Name="Border"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                <ContentPresenter
                                                    x:Name="ContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </mah:ClipBorder>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                            </MultiTrigger>

                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverSelectedForegroundBrush), Mode=OneWay}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.HoverForegroundBrush), Mode=OneWay}" />
                                            </MultiTrigger>

                                            <Trigger Property="mah:ItemHelper.IsMouseLeftButtonPressed" Value="True">
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseLeftButtonPressedForegroundBrush), Mode=OneWay}" />
                                            </Trigger>
                                            <Trigger Property="mah:ItemHelper.IsMouseRightButtonPressed" Value="True">
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.MouseRightButtonPressedForegroundBrush), Mode=OneWay}" />
                                            </Trigger>

                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="RootGrid" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background, Mode=OneWay}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsEnabled" Value="False" />
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Background" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedBorderBrush), Mode=OneWay}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <iconPacks:PackIconFontAwesome
                                Width="20"  HorizontalAlignment="Center"
                                Height="20" Background="{Binding Background,RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                Kind="{Binding Icon}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Border>
        <Border Grid.Column="1" Background="#3333" />
    </Grid>
</mah:MetroWindow>
